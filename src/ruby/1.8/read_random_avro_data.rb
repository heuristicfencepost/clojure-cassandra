require 'rubygems'
require 'avro'

# Basic sanity check to make sure we can ready Avro serialized data generated by Clojure/JVM in Ruby

# Define the meta-schema
meta_schema = Avro::Schema.parse("{\"type\": \"map\", \"values\": \"bytes\"}")

# Define our IO source
data_file_name = "../../clojure/int.avro"
the_file = File.new(data_file_name)

# Read the input source and display the schema
meta_datum_reader = Avro::IO::DatumReader.new(meta_schema)
meta_val = meta_datum_reader.read(Avro::IO::BinaryDecoder.new(the_file))

# Build a new reader which can handle the indicated schema
schema = Avro::Schema.parse(meta_val["schema"])
datum_reader = Avro::IO::DatumReader.new(schema)
val = datum_reader.read(Avro::IO::BinaryDecoder.new(StringIO.new(meta_val["data"])))
puts val
